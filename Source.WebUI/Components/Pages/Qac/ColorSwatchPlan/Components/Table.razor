<div class="col-lg-12 mb-1">
    <div id="simple-bar" class="data-scrollbar table-responsive" style="max-height: calc(100vh - 275px);">
        <BlazorTable Class="datatable w-100 mb-0" Items="objs.Skip((page - 1) * 100).Take(100)" Context="item">
            <TableHeadTemplate>
                <tr style="z-index: 50;background: white;position: sticky;top: 0;box-shadow: 0 1px 1px -1px #615A5A;">
                    <th class="text-center">ItemCode</th>
                    <th class="text-center">ItemName</th>
                    <th class="text-center">ColorCode</th>
                    <th class="text-center">ColorName</th>
                    <th class="text-center">TotalProdQty</th>
                    <th class="text-center">QtyOrder</th>
                    <th class="text-center">StartTime</th>
                    <th class="text-center">Customer</th>
                    <th class="text-center">ShipETD</th>
                </tr>
            </TableHeadTemplate>
            <TableRowTemplate>
                <tr>
                    <td class="text-center">@item.ItemCode </td>
                    <td>@item.ItemName</td>
                    <td class="text-center">@item.ColorCode</td>
                    <td>@item.ColorName</td>
                    <td class="text-center">@(item.QtyScanner != null ? item.QtyScanner.Value.ToString("#,##0.##") : "0") </td>
                    <td class="text-center">@(item.QtyOrder != null ? item.QtyOrder.Value.ToString("#,##0.##") : "0")</td>
                    <td class="text-center">@item.StartDate</td>
                    <td class="text-center">@item.Customer</td>
                    <td class="text-center">@(item.ShipETD != null ? item.ShipETD.Value.ToString("MM-dd-yyyy HH:mm") : "")</td>
                </tr>
            </TableRowTemplate>
            <TableFootTemplate>
                @if (objs.Count > 0)
                {
                    <tr style="z-index: 50;background: white;position: sticky;bottom: 0;box-shadow: 0 1px 1px -1px #615A5A;">
                        <td colspan="5" class="fw-bold" style="background-color: #f6f6f6">Total :</td>
                        <td class="text-center fw-bold" style="background-color: #f6f6f6"> @string.Format("{0:#,##0.##}", objs.Sum(x => x.QtyOrder ?? 0))</td>
                        <td colspan="3" style="background-color: #f6f6f6"></td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td colspan="9">No records found</td>
                    </tr>
                }
            </TableFootTemplate>
        </BlazorTable>
    </div>
</div>

<div class="col-lg-12">
    <div class="row">
        <div class="col-12 col-md-6" style="padding-top: 1rem">
            <span>Total <b class="text-primary">@objs.Count()</b> records </span>
        </div>
        <div class="col-12 col-md-6">
            <BlazorTablePagination PageChangeEvent="async(page) => await OnSetPage.InvokeAsync(page)"
                                   Class="pagination pagination-sm float-end"
                                   DisplayTotals="false"
                                   PagingSize="5"
                                   ActivePage="page"
                                   PageSize="100"
                                   NoOfItems="objs.Count()" />
        </div>
    </div>
</div>
@code {
    [Parameter] public List<ColorPrepartionPlan> objs { get; set; } = new List<ColorPrepartionPlan>();
    [Parameter] public int page { get; set; } = 1;
    [Parameter] public EventCallback<int> OnSetPage { get; set; }
}
