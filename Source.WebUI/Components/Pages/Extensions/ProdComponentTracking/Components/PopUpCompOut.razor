<div class="modal rounded-0" tabindex="-1">
    <div class="modal-dialog" style="max-width: 1600px">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fa fa-file-import"></i>&ensp;
                    Component Out
                </h5>
                <button type="button" class="btn-close" style="color: #fff" @onclick="async() =>await OnCloseForm.InvokeAsync()"></button>
            </div>
            <div class="modal-body rounded-0 data-scrollbar" style="max-height: calc(100vh - 160px);">
                <div class="card">
                    <div class="card-header">
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-3">
                                    <div class="input-group input-group-sm text-center">
                                        <!--!--><span class="input-group-text w-30  text-center border-0 rounded-0">Date:</span>
                                        <input type="date" value="@_date" @onchange="@((ChangeEventArgs arg) => HandleDateChange(arg.Value?.ToString() ?? DateTime.Now.ToString("yyyy-MM-dd")))" class="form-control w-70 text-center rounded-0" style="height: 30px">
                                    </div>
                                </div><!--!-->
                                <div class="col-lg-3">
                                    <div class="input-group input-group-sm text-center">
                                        <!--!--><span class="input-group-text w-30  text-center border-0">Emp Code:</span>
                                        <div class="w-70">
                                            <div class="form-group">
                                                <input value="@_empCode" @onchange="@((ChangeEventArgs arg) => HandleEmpCodeChange(arg.Value?.ToString() ?? ""))"
                                                       id="empCode" type="text" class="form-control form-control-sm" style="height: 30px" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><!--!-->
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="data-scrollbar" style="height: calc(100vh - 350px);">
                                    <table class="datatable w-100 mb-0" data-select2-id="2305">
                                        <!--!-->
                                        <thead>
                                            <tr style="z-index: 10;position: sticky;top: 0;">
                                                <th style="width: 16%" class="text-center"> Barcode</th>
                                                <th style="width: 12%" class="text-center"> CompType </th>
                                                <th style="width: 16%" class="text-center"> ItemName </th>
                                                <th style="width: 16%" class="text-center"> ColorName </th>
                                                <th style="width: 16%" class="text-center"> SizeName </th>
                                                <th style="width: 4%" class="text-center"> Quantity </th>
                                                <th style="width: 20%" class="text-center"> Remark </th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in comps)
                                            {
                                                <tr>
                                                    <td>
                                                        <input class="form-control form-control-sm text-center" type="text" value="@item.TrackNo" style="@(string.IsNullOrEmpty(item.TrackNo) ? "" : "font-weight: bold;")"
                                                               @onchange="@(async(ChangeEventArgs arg) => await HandleScanBarcode(item,arg.Value?.ToString() ?? ""))">
                                                    </td><!--!-->
                                                    <td>
                                                        <input class="form-control form-control-sm text-center" type="text" readonly="" value="@item.CompType">
                                                    </td><!--!-->
                                                    <td>
                                                        <input class="form-control form-control-sm" type="text" readonly="" value="@item.ItemName">
                                                    </td><!--!-->
                                                    <td class="text-center">
                                                        <input class="form-control form-control-sm" type="text" readonly="" value="@item.ColorName">
                                                    </td><!--!-->
                                                    <td class="text-center">
                                                        <input class="form-control form-control-sm" type="text" readonly="" value="@item.SizeName">
                                                    </td><!--!-->
                                                    <td>
                                                        <input class="form-control form-control-sm" type="text" readonly="" value="@item.Qty">
                                                    </td><!--!-->
                                                    <td>
                                                        <input class="form-control form-control-sm" type="text" value="@item.Remark"
                                                               @onchange="@((ChangeEventArgs arg) => item.Remark = arg.Value?.ToString() ?? "")">
                                                    </td><!--!-->
                                                    <td class="text-center">
                                                        <a class="text-danger" @onclick="() => comps.Remove(item)"><!--!--><i class="fa fa-trash-alt"></i></a>
                                                    </td>
                                                </tr>
                                            }

                                        </tbody><!--!-->
                                        <tfoot>
                                            <tr>
                                                <td colspan="9" class="text-center">
                                                    <button class="btn btn-sm btn-default" @onclick="() => comps.Add(new Component())">
                                                        <!--!--><i class="fa fa-plus"></i> Add new
                                                    </button>
                                                </td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer rounded-0">
                <button type="button" class="btn btn-sm btn-secondary" @onclick="async() =>await OnCloseForm.InvokeAsync()">
                    <i class="fa fa-times fa-fw"></i>
                    Close
                </button>
                <button type="submit" class="btn btn-sm btn-primary" @onclick="async() => await OnSubmitForm.InvokeAsync(comps.Where(x => !string.IsNullOrEmpty(x.TrackNo)).ToList())">
                    <i class="fa fa-save fa-fw"></i>
                    Confirm
                </button>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public EventCallback OnCloseForm { get; set; }
    [Parameter] public Component comp { get; set; } = new Component();
    [Parameter] public List<Component> comps { get; set; } = new List<Component>();
    [Parameter] public EventCallback<List<Component>> OnSubmitForm { get; set; }

    protected string? _date;
    protected string? _empCode;

    protected void HandleDateChange(string date)
    {
        _date = date;
        comps.ForEach(_ =>
        {
            _.OutDate = DateTime.Parse(_date ?? DateTime.Now.ToString("yyyy-MM-dd"));
        });
    }

    protected void HandleEmpCodeChange(string empcode)
    {
        _empCode = empcode;
        comps.ForEach(_ =>
        {
            _.CreateBy = empcode;
        });
    }

    protected async Task HandleScanBarcode(Component source, string TrackNo)
    {
        if (!string.IsNullOrEmpty(TrackNo))
        {
            var _source = await _wrapper.Extensions.ProdCompInGetById(TrackNo);
            if (_source != null && comps.FirstOrDefault(x => x.TrackNo == _source.TrackNo) == null)
            {
                if (string.IsNullOrEmpty(source.TrackNo))
                    comps.Add(new Component());

                source.TrackNo = _source.TrackNo;
                source.CompType = _source.CompType;
                source.ItemName = _source.ItemName;
                source.ColorName = _source.ColorName;
                source.SizeName = _source.SizeName;
                source.Qty = _source.Qty;
                source.Remark = _source.Remark;
                source.CreateDate = _source.CreateDate;
                source.OutDate = DateTime.Parse(_date ?? DateTime.Now.ToString("yyyy-MM-dd"));
                source.CreateBy = _empCode;
            }
            else
            {
                source.TrackNo = "";
                source.CompType = "";
                source.ItemName = "";
                source.ColorName = "";
                source.SizeName = "";
                source.Qty = null;
                source.Remark = "";
                source.CreateDate = null;
                source.CreateBy = "";
                await _js.Aleft("Not Found!");
            }
        }
        else
        {
            source.TrackNo = "";
            source.CompType = "";
            source.ItemName = "";
            source.ColorName = "";
            source.SizeName = "";
            source.Qty = null;
            source.Remark = "";
            source.CreateDate = null;
            source.CreateBy = "";
        }
    }

    protected override void OnInitialized()
    {
        _date = DateTime.Now.ToString("yyyy-MM-dd");
        comps.Add(new Component());
    }
}
