
<div class="search-bar">
    <div class="simple">
        <div class="search-icon"><div class="icon-wrapper"><i class="fas fa-search"></i></div></div>
        <div class="search-fields">
            <form @onsubmit="async () => await OnChangeSearch.InvokeAsync(parameter)" @formname="filter-form">
                <div class="row">
                    <div class="col-12 col-lg-1">
                        <div class="form-group">
                            <label for="Dept">
                                Dept
                            </label>
                            <InputSelect @bind-Value="parameter.Dept" id="Dept" class="form-select form-select-sm" style="height: 30px;">
                                <option value="">-- All --</option>
                                @foreach (var item in selects)
                                {
                                    <option value="@item">@item</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="col-12 col-lg-2">
                        <div class="form-group">
                            <label for="FromDate">
                                FromDate
                            </label>
                            <InputText @bind-Value="parameter.FromDate"
                                       id="FromDate" type="date" class="form-control form-control-sm" style="height: 30px;" />
                        </div>
                    </div>
                    <div class="col-12 col-lg-2">
                        <div class="form-group">
                            <label for="ToDate">
                                ToDate
                            </label>
                            <InputText @bind-Value="parameter.ToDate"
                                       id="ToDate" type="Date" class="form-control form-control-sm" style="height: 30px;" />
                        </div>
                    </div>
                    <div class="col-12 col-lg-2">
                        <div class="form-group">
                            <label for="EmpCode">
                                UserScan
                            </label>
                            <InputText @bind-Value="parameter.EmpCode"
                                       id="EmpCode" type="text" class="form-control form-control-sm" style="height: 30px;" />
                        </div>
                    </div>
                    <div class="col-12 col-lg-2">
                        <div class="form-group">
                            <label for="Description">
                                Description
                            </label>
                            <InputText @bind-Value="parameter.Description"
                                       id="Description" type="text" class="form-control form-control-sm" style="height: 30px;" />
                        </div>
                    </div>
                    <div class="col-12 col-lg-1">
                        <label class="clear-search" for="btn"></label>
                        <button type="submit" id="btn" class="btn btn-primary w-100 btn-sm rounded-1">
                            <i class="fas fa-search fa-fw"></i>
                            <span class="hidden-md">
                                Search
                            </span>
                        </button>
                    </div>
                    <div class="col-12 col-lg-1">
                        <label class="clear-search" for="btn"></label>
                        <button type="button" id="btn" class="btn btn-secondary w-100 btn-sm rounded-1" @onclick="async () => await OnResetSearch.InvokeAsync()">
                            <i class="fas fa-ban fa-fw"></i>
                            <span class="hidden-md">
                                Refresh
                            </span>
                        </button>
                    </div>
                    <div class="col-12 col-lg-1">
                        <label class="clear-search" for="btn"></label>
                        <button type="button" id="btn" class="btn btn-default w-100 btn-sm rounded-1" @onclick="async() => await OnSetAdvanced.InvokeAsync()">
                            <i class="fas fa-plus fa-fw"></i>
                            <span class="hidden-md">
                                Advanced
                            </span>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="advanced-search-options" style="display: @(isAdvanced ? "block" : "none");">
        <div class="row">
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <label for="Item">
                        Item
                    </label>
                    @{
                        var _dropdownItem = dropdownItemFullCode.DistinctBy(x => $"{x.ItemCode} - {x.ItemName}")
                        .Select(x => new DropDowList { StrValue = $"{x.ItemCode} - {x.ItemName}", Label = $"{x.ItemCode} - {x.ItemName}" }).ToList();
                    }
                    <DropDownList Id="Item" dropdowns="@_dropdownItem"
                                  initData="@parameter.Item" OnSetValue="@((arg) => parameter.Item = (string?)arg ?? "")" />
                </div>
            </div>
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <label for="Color">
                        Color
                    </label>
                    @{
                        var _dropdownColor = !string.IsNullOrEmpty(parameter.Item) ?
                        dropdownItemFullCode.Where(x => $"{x.ItemCode} - {x.ItemName}" == parameter.Item).DistinctBy(x => $"{x.ColorCode} - {x.ColorName}")
                        .Select(x => new DropDowList { StrValue = $"{x.ColorCode} - {x.ColorName}", Label = $"{x.ColorCode} - {x.ColorName}" }).ToList() :
                        dropdownItemFullCode.DistinctBy(x => $"{x.ColorCode} - {x.ColorName}").Select(x => new DropDowList { StrValue = $"{x.ColorCode} - {x.ColorName}", Label = $"{x.ColorCode} - {x.ColorName}" }).ToList();
                    }
                    <DropDownList Id="Color" dropdowns="@_dropdownColor"
                                  initData="@parameter.Color" OnSetValue="@((arg) => parameter.Color = (string?)arg ?? "")" />
                </div>
            </div>
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <label for="Size">
                        Size
                    </label>
                    @{
                        var _dropdownSize = !string.IsNullOrEmpty(parameter.Item) ?
                        dropdownItemFullCode.Where(x => $"{x.ItemCode} - {x.ItemName}" == parameter.Item).DistinctBy(x => $"{x.SizeCode} - {x.SizeName}")
                        .Select(x => new DropDowList { StrValue = $"{x.SizeCode} - {x.SizeName}", Label = $"{x.SizeCode} - {x.SizeName}" }).ToList() :
                        dropdownItemFullCode.DistinctBy(x => $"{x.SizeCode} - {x.SizeName}")
                        .Select(x => new DropDowList { StrValue = $"{x.SizeCode} - {x.SizeName}", Label = $"{x.SizeCode} - {x.SizeName}" }).ToList();
                    }
                    <DropDownList Id="Size" dropdowns="@_dropdownSize"
                                  initData="@parameter.Size" OnSetValue="@((arg) => parameter.Size = (string?)arg ?? "")" />
                </div>
            </div>
            <div class="col-sm-3 col-md-3">
                <div class="form-group">
                    <label for="FullCode">
                        FullCode
                    </label>
                    <InputText @bind-Value="parameter.FullCode"
                               id="FullCode" type="text" class="form-control form-control-sm" style="height: 30px;" />
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter] public bool isAdvanced { get; set; } = false;
    [Parameter] public EventCallback OnSetAdvanced { get; set; }
    [Parameter] public List<ItemFullCodeDropdown> dropdownItemFullCode { get; set; } = new List<ItemFullCodeDropdown>();

    [Parameter]
    public DataImexParameter parameter { get; set; } = new DataImexParameter();

    [Parameter]
    public List<string> selects { get; set; } = new List<string>();

    [Parameter]
    public EventCallback<DataImexParameter> OnChangeSearch { get; set; }

    [Parameter]
    public EventCallback OnResetSearch { get; set; }
}
